name: Build and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Compile TypeScript code
      - name: Compile TypeScript
        run: npm run build

      # Step 5: Set up Docker Buildx (for multi-platform builds, if needed)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Get the current version from the VERSION file
      - name: Get current version
        id: version
        run: |
          if [ ! -f VERSION ]; then
            echo "0" > VERSION
          fi
          CURRENT_VERSION=$(cat VERSION)
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      # Step 8: Increment the version and update the VERSION file
      - name: Increment version
        id: increment_version
        run: |
          NEW_VERSION=$((CURRENT_VERSION + 1))
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "${NEW_VERSION}" > VERSION
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add VERSION
          git commit -m "Bump version to v${NEW_VERSION}"

      # Step 9: Push changes using PAT
      - name: Push changes
        env:
          PAT_TOKEN: ${{ secrets.PAT }}
        run: |
          git push https://${PAT_TOKEN}@github.com/${{ github.repository }} HEAD:${{ github.ref }}

      # Step 10: Build and push the Docker image with the new version tag
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-server:v${{ env.NEW_VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/node-server:v${{ env.NEW_VERSION }}

      # Step 11: Tag the image as latest and push it
      - name: Tag the latest image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/node-server:v${{ env.NEW_VERSION }} ${{ secrets.DOCKER_USERNAME }}/node-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/node-server:latest
